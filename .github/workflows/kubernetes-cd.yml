on:
  pull_request:
    branches:
    - main
name: Deploy to AKS Cluster
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      resourceGroupName: k8s-landingzone
      clusterName: k8s-cluster
      acrName: prototypedemoacr
      appName: flaskdemo
    steps:  
    - uses: actions/checkout@master

    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{env.clusterName}}
        resource-group: ${{env.resourceGroupName}}

    - uses: Azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{env.acrName}}.azurecr.io
        container-registry-username: ${{env.acrName}}
        container-registry-password: ${{ secrets.ACR_PASS }}
        secret-name: k8s-secret

    # Deploy to Azure
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{env.acrName}}.azurecr.io/${{env.appName}}:${{ github.sha }}
        imagepullsecrets: |
          k8s-secret       