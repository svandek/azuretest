on:
  pull_request:
    branches:
    - main
name: Deploy to Containerized App Service
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      resourceGroupName: containerapp-lz
      servicePlanName: container-asp
      acrName: prototypedemoacr
      appName: flaskdemocontainer
      subscriptionId: a69ea5f4-a433-4459-aa84-c31759fa1d60
    steps:  
    - uses: actions/checkout@master

    # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script to provision a new Web App for Container
      uses: azure/CLI@v0-beta
      with:
        azcliversion: latest
        inlineScript: |
          az webapp create --subscription ${{ env.subscriptionId }} --resource-group ${{ env.resourceGroupName }} --plan ${{ env.servicePlanName }} --name ${{ env.appName }}  -i nginx    

    - name: Set Web App ACR authentication
      uses: Azure/appservice-settings@v1
      with:
        app-name: ${{env.appName}} 
        app-settings-json: |
          [
              {
                  "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                  "value": "${{secrets.ACR_PASS}}",
                  "slotSetting": false
              },
              {
                  "name": "DOCKER_REGISTRY_SERVER_URL",
                  "value": "https://${{env.acrName}}.azurecr.io",
                  "slotSetting": false
              },
              {
                  "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                  "value": "${{env.acrName}}",
                  "slotSetting": false
              }
          ]

    # Deploy to Azure
    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{env.appName}}
        images: ${{env.acrName}}.azurecr.io/${{env.appName}}:${{ github.sha }}      